(!) Если хотите, чтобы русский текст отображался корректно, используйте кодировку UTF-8 !!!
	В блокноте: Файл -> Сохранить как...(Ctrl + Shift + S) -> Снизу выбираем кодировку UTF-8)
	В Notepad++: Кодировки -> Преобразовать в UTF-8

========================================================================
Чтобы добавить в программу еще один алгоритм, поместите .cs файл с кодом в эту папку
Для удобства написания можно создать проект в удобной для вас IDE и после работы закинуть сюда .cs файл(ы)

В программе есть окно дебага, оно может помочь вам, если с вашим кодом что-то не так

========================================================================

0. Стандартным набором пространств имен будет такой набор:
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;

Добавлять можно, а удалять не рекомендуется



1. Для нахождения кратчайшего пути в классе должен быть метод, удовлетворяющий делегату
delegate int[] FindBestPath(int[,] graph, int startNodeID, int endNodeID);

(!) Имя метода должно быть "FindBestPath"

Например:
int[] FindBestPath(int[,] inputGraph, int fromNode, int toNode)
{
	// code
}



2. Для работы алгоритма обучения в классе должен быть метод, удовлетворяющий делегату
delegate int[] AlgorithmTeaching(int[,] inputGraph, int startNodeID, int endNodeID, out int[,] graphToShow, ref object customDataToSave, out string message, out bool isAlgorithmFinished, out int nodeToHighlight);

(!) Имя метода должно быть "GetAlgorithmStep"

Например:
int[] GetAlgorithmStep(int[,] inputGraph, int fromNode, int toNode, out int[,] outputGraph, ref object dataToSave, out string message, out bool isAlgorithmFinished, out int nodeToHighlight)
{
	// code
}



3. Добавлять вспомогательные классы и методы можно

4. Для сохранения данных в алгоритме обучения (ref object dataToSave) можно создать свой класс, записывать туда данные и передавать как ref параметр
После принимать его как object и явно приводить тип к вашему

Например можно написать такой класс:
class DataToSave
{
	public int[,] graph;
	public int[,] p;

	public int k, i, j;
}



5. Пример рабочего класса-алгоритма уже должен находится в этой папке (FloydAlgorithm)



========================================================================
(!) Неважно, какой уровень доступа у типов, свойств и методов (public / private), но лучше не прописывать модификаторы доступа вручную



Чтобы у вашего алгоритма отображалось имя, добавьте в класс Свойство string Name с get-аксессором

Например:
class FloydAlgorithm
{
	string Name => "Алгоритм Флойда-Уоршелла";
}

Если такого свойства нет, будет браться имя класса (напр. "FloydAlgorithm", в данном случае)



int.MaxValue = "inf"
nodeToHighlight -- специальная нода, подсветка по желанию. Не хочешь = -1